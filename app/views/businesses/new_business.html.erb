<h2>New Business</h2>
<%= form_for @business, url: new_business_path, method: :post do |f| %>
  <div class="form-group">
    <label>Address</label>
    <%= f.collection_select(:address_id, Address.all, :id, :combadd, { prompt: 'Select an address' }, class: 'form-control selectpicker', data: { style: 'btn-primary' }) %>
  </div>

  <div class="form-group" id="units-group" style="display: none;">
    <label>Units</label>
    <%= f.collection_select(:unit_id, [], :id, :number, { prompt: 'Select a unit' }, class: 'form-control selectpicker', id: 'business_unit_id') %>
    <label>Or Enter New Unit Number</label>
    <%= f.text_field :new_unit_number, class: 'form-control', id: 'new_unit_number', placeholder: 'Enter new unit number' %>
  </div>


  <div class="form-group">
    <%= f.label :name %>
    <%= f.text_field :name, class: "form-control" %>
  </div>

  <div class="form-group">
    <label>Trading As</label>
    <%= f.text_field :trading_as, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= f.label :phone %>
    <%= f.text_field :phone, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= f.label :email %>
    <%= f.text_field :email, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= f.label :website %>
    <%= f.text_field :website, class: "form-control" %>
  </div>

  <div class="form-group mt-3">
    <%= f.label :contact_id %>
    <%= f.collection_select(:contact_ids, Contact.all, :id, :full_name_and_email, { prompt: 'Select a contact' }, class: 'form-control selectpicker', data: { style: 'btn-primary' }) %>
  </div>
  
  <%= f.submit "Create Business", class: "btn btn-primary mt-3" %>
<% end %>

<script>
  document.addEventListener("turbo:load", function () {
    initializeChoices();

    // Address change event
    document.querySelector('#business_address_id').addEventListener('change', function (event) {
      const addressId = event.target.value;

      // Fetch units for the selected address
      if (addressId) {
        fetchUnitsForAddress(addressId);
      } else {
        hideUnitsDropdown();
      }
    });

    // Event listener to toggle manual unit number entry
    document.querySelector('#business_unit_id').addEventListener('change', function (event) {
      const selectedUnit = event.target.value;
      toggleNewUnitField(selectedUnit);
    });
  });

  function initializeChoices() {
    new Choices('#business_contact_ids', {
      removeItemButton: true,
      searchEnabled: true,
      placeholder: true,
      placeholderValue: 'Select a contact',
    });

    new Choices('#business_address_id', {
      removeItemButton: true,
      searchEnabled: true,
      placeholder: true,
      placeholderValue: 'Select an address',
    });
  }

  function fetchUnitsForAddress(addressId) {
    fetch(`/addresses/${addressId}/units`)
      .then(response => response.json())
      .then(data => {
        const unitsSelect = document.querySelector('#business_unit_id');
        unitsSelect.innerHTML = ''; // Clear existing options

        if (data.units && data.units.length > 0) {
          data.units.forEach(unit => {
            const option = document.createElement('option');
            option.value = unit.id;
            option.text = unit.number; // Use `number` to display the unit number
            unitsSelect.appendChild(option);
          });

          showUnitsDropdown();
          toggleNewUnitField(unitsSelect.value); // Hide new unit field if units are available
        } else {
          showUnitsDropdown();
          toggleNewUnitField(null); // Show new unit field if no units are available
        }
      })
      .catch(error => console.error('Error fetching units:', error));
  }

  function showUnitsDropdown() {
    document.querySelector('#units-group').style.display = 'block';
  }

  function hideUnitsDropdown() {
    document.querySelector('#units-group').style.display = 'none';
    document.querySelector('#business_unit_id').innerHTML = '';
  }

  // Function to show or hide the new unit number field
  function toggleNewUnitField(selectedUnit) {
    const newUnitField = document.querySelector('#new_unit_number');
    if (selectedUnit) {
      newUnitField.style.display = 'none'; // Hide the new unit field if an existing unit is selected
    } else {
      newUnitField.style.display = 'block'; // Show the new unit field if no unit is selected or no units are available
    }
  }

</script>

