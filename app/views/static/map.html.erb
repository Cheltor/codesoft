<style>
  #map {
    height: 100%;
  }
  /* Optional: Makes the sample page fill the window. */
  html, body, .container-fluid {
    height: 100%;
    margin: 0;
    padding: 0;
  }
</style>

<div class="row text-center">
  <div class="col-md-12">
    <div class="btn-group mb-2" role="group">
      <button id="geolocate" class="btn btn-secondary">Center on my location</button>
      <a href="?show=all" class="btn btn-primary">All</a>
      <a href="?show=violations" class="btn btn-danger">Violations</a>
    </div>
  </div>
  <div class="col-md-6 offset-md-3">
    <form method="get" class="form-inline">
      <div class="input-group mb-3">
        <input type="text" name="qmap" class="form-control" placeholder="Search Addresses" aria-label="Recipient's username" aria-describedby="button-addon2">
        <button class="btn btn-primary" type="submit" id="button-addon2">Search</button>
      </div>
    </form>
  </div>
</div>


<div class="container-fluid" style="width: 100%; height: 90%;">
  <div id="map" style="width: 100%; height: 100%;"></div>
</div>

<script>
  window.initMap = function() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 38.963272210390286, lng: -76.93172673978854},
      zoom: 15,
      styles: [
        {
          featureType: 'poi',
          stylers: [{ visibility: 'off' }]
        },
        {
          featureType: 'transit',
          elementType: 'labels.icon',
          stylers: [{ visibility: 'off' }]
        }
      ]
    });

    // Geolocation Code
    document.getElementById('geolocate').addEventListener('click', function() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };

          map.setCenter(pos);
          map.setZoom(18);
        }, function() {
          handleLocationError(true, map.getCenter());
        });
      } else {
        // Browser doesn't support Geolocation
        handleLocationError(false, map.getCenter());
      }
    });
    
    var currentInfoWindow = null; 

    function createMarkerWithInfoWindow(map, position, title, content) {
      var marker = new google.maps.Marker({
        position: position,
        map: map,
        title: title
      });

      marker.addListener('click', function() {
        if (currentInfoWindow) { 
          currentInfoWindow.close();
        }

        var infowindow = new google.maps.InfoWindow({
          content: content
        });
        infowindow.open(map, marker);

        currentInfoWindow = infowindow; 
      });

      return marker;
    }

    var bounds = new google.maps.LatLngBounds();

    <% @addresses.each do |address| %>
      <% if address.latitude.present? && address.longitude.present? %>
        var position = { lat: <%= address.latitude %>, lng: <%= address.longitude %> };
        var title = '<%= j address.combadd %>';
        var content = '<a href="/addresses/' + <%= address.id %> + '">' + '<%= j address.property_name_with_combadd %>' + '</a>';

        var marker = createMarkerWithInfoWindow(map, position, title, content);

        // Extend the bounds to include the position of the marker
        bounds.extend(marker.getPosition());
      <% end %>
    <% end %>

    // If there are markers, fit the map to the bounds. Otherwise, use the default center and zoom.
    if (!bounds.isEmpty()) {
      map.fitBounds(bounds);
    }
  }
</script>

<% if Rails.env.development? %>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.google[:api_key] %>&callback=initMap"></script>
<% else %>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap"></script>
<% end %>
